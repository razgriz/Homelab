version: "3.4"

x-common-env:
  &common-environment
  PUID: ${PUID}
  PGID: ${PGID}
  TZ: ${TZ}

x-media-volume:
  &media-volume 
  - type: bind
    source: ${VEGA_MEDIA}
    target: ${MEDIA}

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
  sonarr:
    build: sonarr/.
    container_name: sonarr
    ports:
      - "8989:8989"
    environment: 
      - <<: *common-environment
      - VIRTUAL_HOST=${HOST_SONARR}.${DOMAIN_END}
    volumes: 
      - <<: *media-volume
      - ${CONFIG_PATH}/sonarr:/config
    restart: unless-stopped

  radarr:
    build: radarr/.
    container_name: radarr
    ports: 
      - "7878:7878"
    environment: 
      - <<: *common-environment
      - VIRTUAL_HOST=${HOST_RADARR}.${DOMAIN_END}
    volumes: 
      - <<: *media-volume
      - ${CONFIG_PATH}/radarr:/config
    restart: unless-stopped

  lidarr:
    build: lidarr
    container_name: lidarr
    ports:
      - "8686:8686"
    environment: 
      - <<: *common-environment
      - VIRTUAL_HOST=${HOST_LIDARR}.{DOMAIN_END}
    volumes: 
      - <<: *media-volume
      - ${CONFIG_PATH}/lidarr:/config
    restart: unless-stopped

  jackett:
    build: jackett/.
    container_name: jackett
    ports:
      - "9117:9117"
    environment: 
      - <<: *common-environment
      - VIRTUAL_HOST=${HOST_JACKETT}.{DOMAIN_END}
    volumes:
      - ${CONFIG_PATH}/jackett:/config
    restart: unless-stopped

  calibre:
    build: calibre/.
    container_name: calibre
    ports:
      - "8080:8080"
      - "8081:8081"
    environment: 
      - <<: *common-environment
      - VIRTUAL_HOST=${HOST_CALIBRE}.{DOMAIN_END}
    volumes: *media-volume
    restart: unless-stopped

    #  calibre-web:
    #    build: calibre-web/.
    #    container_name: calibre-web
    #    ports:
    #      - "8080:8080"
    #      - "8081:8081"
    #    environment: 
    #      - <<: *common-environment
    #      - DOCKER_MODS=linuxserver/calibre-web:calibre
    
  airsonic:
    build: airsonic/.
    container_name: airsonic
    ports:
      - "4040:4040"
    environment:
      - <<: *common-environment
      - VIRTUAL_HOST=${HOST_AIRSONIC}.{DOMAIN_END}
    volumes:
      - ${CONFIG_PATH}/airsonic:/config
      - type: bind
        source: ${VEGA_MEDIA}/${VEGA_MEDIA_MUSIC}
        target: /music
      - type: bind
        source: ${VEGA_MEDIA}/${VEGA_MEDIA_PLAYLISTS}
        target: /playlists
      - type: bind
        source: ${VEGA_MEDIA}/${VEGA_MEDIA_PODCASTS}
        target: /podcasts
    restart: unless-stopped
